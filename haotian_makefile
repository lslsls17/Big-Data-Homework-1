#define macro

CC      = icpc
CFLAGS1  = -std=c++0x 
CFLAGS2  =-/usr/lib/mpich/include/ -/usr/local/include
LDFLAGS = -lboost_system -lboost_filesystem  -llog4cpp -lpthread -lmpi -lmpi_cxx
LPFLAGS = -L/share/app

#include "mylog.hpp"
#include <iostream>
#include "Parse_Csv.hpp"
#include "scrub.hpp"
#include "data_class.hpp"
#include "normal.hpp"
#include <stdio.h>
#include <time.h>
#include <string.h>
#include <sstream>
#include </usr/lib/mpich/include/mpi.h>
#include <thread>

using namespace std;

int main() {
	int signal_size;
			int rank=0;
			int size=0;
				 MPI_Init (NULL, NULL);
				 MPI_Comm_rank (MPI_COMM_WORLD, &rank);
				 MPI_Comm_size (MPI_COMM_WORLD, &size);

				   char processor_name[MPI_MAX_PROCESSOR_NAME];
				   int name_len;
				   MPI_Get_processor_name(processor_name, &name_len);

				   printf("Hello world from processor %s, rank %d"
				          " out of %d processors\n",
				          processor_name, rank, size);

				   MPI_Finalize();

}


all: main clean

main: HW1.o Normality.o Scrubber.o OutlierDetecter.o Record.o Utils.o Logging.o
	$(CC) $(CFLAGS1) $(LPFLAGS) $(LDFLAGS) -o main HW1.o 
.PHONY: clean cleanest

clean:
	rm *.o

cleanest: clean
	rm BDiF2015-Haotian-Wu